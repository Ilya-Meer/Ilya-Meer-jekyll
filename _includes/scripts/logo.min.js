var camera,scene,renderer,mesh,controls,windowHalfX=window.innerWidth/2,windowHalfY=window.innerHeight/2,setup=function(){(camera=new THREE.PerspectiveCamera(35,window.innerWidth/window.innerHeight,.1,3e3)).position.z=250,scene=new THREE.Scene;var e=new THREE.AmbientLight(16777215,.5);scene.add(e);var n=new THREE.Color("#ffffff"),i=new THREE.PointLight(n,.75);scene.add(i),(new THREE.FontLoader).load("../../assets/fonts/raleway_im.json",function(e){var n=new THREE.TextGeometry("IM",{font:e,size:200,height:20,curveSegments:12,bevelEnabled:!0,bevelThickness:9,bevelSize:2,bevelSegments:5});n.center();var i=new THREE.MeshPhongMaterial({color:2701129,shininess:500});(mesh=new THREE.Mesh(n,i)).position.z=-400,mesh.rotation.x=3,mesh.rotation.y=3,mesh.rotation.z=3,scene.add(mesh)}),(renderer=new THREE.WebGLRenderer({canvas:document.getElementById("canvas"),antialias:!0})).setClearColor(16777215),renderer.setSize(window.innerWidth,window.innerHeight),(controls=new THREE.ObjectControls(camera,renderer.domElement,mesh)).enableVerticalRotation(),controls.setRotationSpeed(.05),window.addEventListener("resize",onWindowResize,!1),animate()};function onWindowResize(){windowHalfX=window.innerWidth/2,windowHalfY=window.innerHeight/2,camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}function animate(){mesh&&(mesh.rotation.x+=.001,mesh.rotation.y+=.003,mesh.rotation.z+=.005),requestAnimationFrame(animate),render()}function render(){renderer.render(scene,camera)}setup();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ28uanMiXSwibmFtZXMiOlsiY2FtZXJhIiwic2NlbmUiLCJyZW5kZXJlciIsIm1lc2giLCJjb250cm9scyIsIndpbmRvd0hhbGZYIiwid2luZG93IiwiaW5uZXJXaWR0aCIsIndpbmRvd0hhbGZZIiwiaW5uZXJIZWlnaHQiLCJzZXR1cCIsIlRIUkVFIiwiUGVyc3BlY3RpdmVDYW1lcmEiLCJwb3NpdGlvbiIsInoiLCJTY2VuZSIsImFtbGlnaHQiLCJBbWJpZW50TGlnaHQiLCJhZGQiLCJjb2xvck9iaiIsIkNvbG9yIiwicHRsaWdodCIsIlBvaW50TGlnaHQiLCJGb250TG9hZGVyIiwibG9hZCIsImZvbnQiLCJnZW9tZXRyeSIsIlRleHRHZW9tZXRyeSIsInNpemUiLCJoZWlnaHQiLCJjdXJ2ZVNlZ21lbnRzIiwiYmV2ZWxFbmFibGVkIiwiYmV2ZWxUaGlja25lc3MiLCJiZXZlbFNpemUiLCJiZXZlbFNlZ21lbnRzIiwiY2VudGVyIiwibWF0ZXJpYWwiLCJNZXNoUGhvbmdNYXRlcmlhbCIsImNvbG9yIiwic2hpbmluZXNzIiwiTWVzaCIsInJvdGF0aW9uIiwieCIsInkiLCJXZWJHTFJlbmRlcmVyIiwiY2FudmFzIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImFudGlhbGlhcyIsInNldENsZWFyQ29sb3IiLCJzZXRTaXplIiwiT2JqZWN0Q29udHJvbHMiLCJkb21FbGVtZW50IiwiZW5hYmxlVmVydGljYWxSb3RhdGlvbiIsInNldFJvdGF0aW9uU3BlZWQiLCJhZGRFdmVudExpc3RlbmVyIiwib25XaW5kb3dSZXNpemUiLCJhbmltYXRlIiwiYXNwZWN0IiwidXBkYXRlUHJvamVjdGlvbk1hdHJpeCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsInJlbmRlciJdLCJtYXBwaW5ncyI6IkFBRUEsSUFBSUEsT0FBUUMsTUFBT0MsU0FFZkMsS0FFQUMsU0FFQUMsWUFBY0MsT0FBT0MsV0FBYSxFQUNsQ0MsWUFBY0YsT0FBT0csWUFBYyxFQUVuQ0MsTUFBUSxZQUNYVixPQUFTLElBQUlXLE1BQU1DLGtCQUFrQixHQUFJTixPQUFPQyxXQUFXRCxPQUFPRyxZQUFhLEdBQUssTUFDN0VJLFNBQVNDLEVBQUksSUFFcEJiLE1BQVEsSUFBSVUsTUFBTUksTUFLbEIsSUFBSUMsRUFBVSxJQUFJTCxNQUFNTSxhQUFhLFNBQVUsSUFFL0NoQixNQUFNaUIsSUFBSUYsR0FHVixJQUVJRyxFQUFXLElBQUlSLE1BQU1TLE1BRkosV0FHakJDLEVBQVUsSUFBSVYsTUFBTVcsV0FBV0gsRUFBVSxLQUM3Q2xCLE1BQU1pQixJQUFJRyxJQUlHLElBQUlWLE1BQU1ZLFlBRWhCQyxLQUFLLHFDQUFzQyxTQUFVQyxHQUMzRCxJQUFJQyxFQUFXLElBQUlmLE1BQU1nQixhQUFhLEtBQU0sQ0FBRUYsS0FBTUEsRUFBTUcsS0FBTSxJQUFLQyxPQUFRLEdBQUlDLGNBQWUsR0FBSUMsY0FBYyxFQUFNQyxlQUFnQixFQUFHQyxVQUFXLEVBQUdDLGNBQWUsSUFDeEtSLEVBQVNTLFNBRVQsSUFBSUMsRUFBVyxJQUFJekIsTUFBTTBCLGtCQUFrQixDQUFFQyxNQUFPLFFBQVVDLFVBQVcsT0FFekVwQyxLQUFPLElBQUlRLE1BQU02QixLQUFLZCxFQUFVVSxJQUMzQnZCLFNBQVNDLEdBQUssSUFDbkJYLEtBQUtzQyxTQUFTQyxFQUFJLEVBQ2xCdkMsS0FBS3NDLFNBQVNFLEVBQUksRUFDbEJ4QyxLQUFLc0MsU0FBUzNCLEVBQUksRUFFbEJiLE1BQU1pQixJQUFJZixTQUtYRCxTQUFXLElBQUlTLE1BQU1pQyxjQUFjLENBQUNDLE9BQVFDLFNBQVNDLGVBQWUsVUFBV0MsV0FBVyxLQUNqRkMsY0FBYyxVQUN2Qi9DLFNBQVNnRCxRQUFRNUMsT0FBT0MsV0FBV0QsT0FBT0csY0FJMUNMLFNBQVcsSUFBSU8sTUFBTXdDLGVBQWVuRCxPQUFRRSxTQUFTa0QsV0FBWWpELE9BQ3hEa0QseUJBQ1RqRCxTQUFTa0QsaUJBQWlCLEtBRTFCaEQsT0FBT2lELGlCQUFpQixTQUFVQyxnQkFBZ0IsR0FFbERDLFdBR0QsU0FBU0QsaUJBQ1JuRCxZQUFjQyxPQUFPQyxXQUFhLEVBQ2xDQyxZQUFjRixPQUFPRyxZQUFjLEVBRW5DVCxPQUFPMEQsT0FBU3BELE9BQU9DLFdBQWFELE9BQU9HLFlBQzNDVCxPQUFPMkQseUJBRVB6RCxTQUFTZ0QsUUFBUTVDLE9BQU9DLFdBQVlELE9BQU9HLGFBRzVDLFNBQVNnRCxVQUNKdEQsT0FDSEEsS0FBS3NDLFNBQVNDLEdBQUssS0FDbkJ2QyxLQUFLc0MsU0FBU0UsR0FBSyxLQUNuQnhDLEtBQUtzQyxTQUFTM0IsR0FBSyxNQUdwQjhDLHNCQUFzQkgsU0FDdEJJLFNBR0QsU0FBU0EsU0FDUjNELFNBQVMyRCxPQUFPNUQsTUFBT0QsUUFHeEJVIiwiZmlsZSI6ImxvZ28ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcblxyXG52YXIgY2FtZXJhLCBzY2VuZSwgcmVuZGVyZXI7XHJcblxyXG52YXIgbWVzaDtcclxuXHJcbnZhciBjb250cm9scztcclxuXHJcbnZhciB3aW5kb3dIYWxmWCA9IHdpbmRvdy5pbm5lcldpZHRoIC8gMjtcclxudmFyIHdpbmRvd0hhbGZZID0gd2luZG93LmlubmVySGVpZ2h0IC8gMjtcclxuXHJcbnZhciBzZXR1cCA9IGZ1bmN0aW9uKCkge1xyXG5cdGNhbWVyYSA9IG5ldyBUSFJFRS5QZXJzcGVjdGl2ZUNhbWVyYSgzNSwgd2luZG93LmlubmVyV2lkdGgvd2luZG93LmlubmVySGVpZ2h0LCAwLjEsIDMwMDApO1xyXG5cdGNhbWVyYS5wb3NpdGlvbi56ID0gMjUwO1xyXG5cclxuXHRzY2VuZSA9IG5ldyBUSFJFRS5TY2VuZSgpO1xyXG5cclxuXHQvLyBMSUdIVElORyBcclxuXHJcblx0Ly8gQW1iaWVudCBMaWdodFxyXG5cdHZhciBhbWxpZ2h0ID0gbmV3IFRIUkVFLkFtYmllbnRMaWdodCgweGZmZmZmZiwgMC41KTtcclxuXHQvLyBTcGVjaWZpZXMgaW50ZW5zaXR5IG9mIGFtYmllbnQgbGlnaHRcclxuXHRzY2VuZS5hZGQoYW1saWdodCk7XHJcblxyXG5cdC8vIFBvaW50IExpZ2h0XHJcblx0dmFyIHBhcmFtcyA9IHtjb2xvcjogXCIjZmZmZmZmXCIgfTtcclxuXHJcblx0dmFyIGNvbG9yT2JqID0gbmV3IFRIUkVFLkNvbG9yKHBhcmFtcy5jb2xvcik7XHJcblx0dmFyIHB0bGlnaHQgPSBuZXcgVEhSRUUuUG9pbnRMaWdodChjb2xvck9iaiwgMC43NSk7XHJcblx0c2NlbmUuYWRkKHB0bGlnaHQpO1xyXG5cclxuXHJcblx0Ly8gTUVTSCBBTkQgRk9OVCBMT0FERVJcclxuXHR2YXIgbG9hZGVyID0gbmV3IFRIUkVFLkZvbnRMb2FkZXIoKTtcclxuXHJcblx0bG9hZGVyLmxvYWQoJy4uLy4uL2Fzc2V0cy9mb250cy9yYWxld2F5X2ltLmpzb24nLCBmdW5jdGlvbiAoZm9udCkge1xyXG5cdFx0dmFyIGdlb21ldHJ5ID0gbmV3IFRIUkVFLlRleHRHZW9tZXRyeSgnSU0nLCB7IGZvbnQ6IGZvbnQsIHNpemU6IDIwMCwgaGVpZ2h0OiAyMCwgY3VydmVTZWdtZW50czogMTIsIGJldmVsRW5hYmxlZDogdHJ1ZSwgYmV2ZWxUaGlja25lc3M6IDksIGJldmVsU2l6ZTogMiwgYmV2ZWxTZWdtZW50czogNSB9KTtcclxuXHRcdGdlb21ldHJ5LmNlbnRlcigpO1xyXG5cclxuXHRcdHZhciBtYXRlcmlhbCA9IG5ldyBUSFJFRS5NZXNoUGhvbmdNYXRlcmlhbCh7IGNvbG9yOiAweDI5Mzc0OSwgc2hpbmluZXNzOiA1MDAgfSk7XHJcblx0XHJcblx0XHRtZXNoID0gbmV3IFRIUkVFLk1lc2goZ2VvbWV0cnksIG1hdGVyaWFsKTtcclxuXHRcdG1lc2gucG9zaXRpb24ueiA9IC00MDA7ICAgIFxyXG5cdFx0bWVzaC5yb3RhdGlvbi54ID0gMztcclxuXHRcdG1lc2gucm90YXRpb24ueSA9IDM7XHJcblx0XHRtZXNoLnJvdGF0aW9uLnogPSAzO1xyXG5cclxuXHRcdHNjZW5lLmFkZChtZXNoKTtcclxuXHR9KTtcclxuXHJcblx0Ly8gUkVOREVSRVJcclxuXHJcblx0cmVuZGVyZXIgPSBuZXcgVEhSRUUuV2ViR0xSZW5kZXJlcih7Y2FudmFzOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2FudmFzJyksIGFudGlhbGlhczogdHJ1ZX0pO1xyXG5cdHJlbmRlcmVyLnNldENsZWFyQ29sb3IoMHhmZmZmZmYpO1xyXG5cdHJlbmRlcmVyLnNldFNpemUod2luZG93LmlubmVyV2lkdGgsd2luZG93LmlubmVySGVpZ2h0KTtcclxuXHJcblx0Ly8gQ09OVFJPTFNcclxuXHJcblx0Y29udHJvbHMgPSBuZXcgVEhSRUUuT2JqZWN0Q29udHJvbHMoY2FtZXJhLCByZW5kZXJlci5kb21FbGVtZW50LCBtZXNoKTtcclxuXHRjb250cm9scy5lbmFibGVWZXJ0aWNhbFJvdGF0aW9uKCk7XHJcblx0Y29udHJvbHMuc2V0Um90YXRpb25TcGVlZCgwLjA1KTtcclxuXHJcblx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIG9uV2luZG93UmVzaXplLCBmYWxzZSk7XHJcblxyXG5cdGFuaW1hdGUoKTtcclxufTtcclxuXHJcbmZ1bmN0aW9uIG9uV2luZG93UmVzaXplKCkge1xyXG5cdHdpbmRvd0hhbGZYID0gd2luZG93LmlubmVyV2lkdGggLyAyO1xyXG5cdHdpbmRvd0hhbGZZID0gd2luZG93LmlubmVySGVpZ2h0IC8gMjtcclxuXHJcblx0Y2FtZXJhLmFzcGVjdCA9IHdpbmRvdy5pbm5lcldpZHRoIC8gd2luZG93LmlubmVySGVpZ2h0O1xyXG5cdGNhbWVyYS51cGRhdGVQcm9qZWN0aW9uTWF0cml4KCk7XHJcblxyXG5cdHJlbmRlcmVyLnNldFNpemUod2luZG93LmlubmVyV2lkdGgsIHdpbmRvdy5pbm5lckhlaWdodCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFuaW1hdGUoKSB7XHJcblx0aWYgKG1lc2gpIHtcclxuXHRcdG1lc2gucm90YXRpb24ueCArPSAwLjAwMTtcclxuXHRcdG1lc2gucm90YXRpb24ueSArPSAwLjAwMztcclxuXHRcdG1lc2gucm90YXRpb24ueiArPSAwLjAwNTsgIFxyXG5cdH1cclxuXHJcblx0cmVxdWVzdEFuaW1hdGlvbkZyYW1lKGFuaW1hdGUpO1xyXG5cdHJlbmRlcigpO1xyXG59XHJcblxyXG5mdW5jdGlvbiByZW5kZXIoKSB7XHJcblx0cmVuZGVyZXIucmVuZGVyKHNjZW5lLCBjYW1lcmEpO1xyXG59XHJcblxyXG5zZXR1cCgpOyJdfQ==