THREE.ObjectControls=function(i,t,e){mesh=e,t=void 0!==t?t:document,this.setObjectToMove=function(t){mesh=t},this.setDistance=function(t,e){h=t,s=e},this.setZoomSpeed=function(t){o=t},this.setRotationSpeed=function(t){u=t},this.setRotationSpeedTouchDevices=function(t){c=t},this.enableVerticalRotation=function(){l=!0},this.disableVerticalRotation=function(){l=!1},this.enableHorizontalRotation=function(){f=!0},this.disableHorizontalRotation=function(){f=!1},this.setMaxVerticalRotationAngle=function(t,e){n.x.from=t,n.x.to=e,n.x.enabled=!0},this.setMaxHorizontalRotationAngle=function(t,e){n.y.from=t,n.y.to=e,n.y.enabled=!0},this.disableMaxHorizontalAngleRotation=function(){n.y.enabled=!1},this.disableMaxVerticalAngleRotation=function(){n.x.enabled=!1},t.addEventListener("mousedown",function(t){M=!0,a=r.MOUSEDOWN},!1),t.addEventListener("mousemove",function(t){if(M){var e={x:t.offsetX-d.x,y:t.offsetY-d.y};if(d={x:t.offsetX,y:t.offsetY},f&&0!=e.x){if(!p(Math.sign(e.x)*u,"y"))return;mesh.rotation.y+=Math.sign(e.x)*u,a=r.MOUSEMOVE}if(l&&0!=e.y){if(!p(Math.sign(e.y)*u,"x"))return;mesh.rotation.x+=Math.sign(e.y)*u,a=r.MOUSEMOVE}}},!1),t.addEventListener("mouseup",function(t){M=!1,m()},!1),t.addEventListener("wheel",function(t){var e=t.wheelDelta?t.wheelDelta:-1*t.deltaY;0<e&&i.position.z>h?E():e<0&&i.position.z<s&&g()},!1),t.addEventListener("touchstart",function(t){t.preventDefault(),a=r.MOUSEDOWN,2===t.touches.length?(y.X=Math.abs(t.touches[0].clientX-t.touches[1].clientX),y.Y=Math.abs(t.touches[0].clientY-t.touches[1].clientY),x=new Array(2)):d={x:t.touches[0].pageX,y:t.touches[0].pageY}},!1),t.addEventListener("touchmove",function(t){if(t.preventDefault(),a=r.MOUSEMOVE,2===t.touches.length){x=new Array(2);var e=Math.abs(t.touches[0].clientX-t.touches[1].clientX),n=Math.abs(t.touches[0].clientY-t.touches[1].clientY);y&&0<y.X&&0<y.Y&&(e>y.X&&n>y.Y&&i.position.z>h?E():e<y.X&&i.position.z<s&&n<y.Y&&g()),y.X=e,y.Y=n}else if(0===x.length){y.X=null,y.Y=null;var o={x:t.touches[0].pageX-d.x,y:t.touches[0].pageY-d.y};if(d={x:t.touches[0].pageX,y:t.touches[0].pageY},f&&0!=o.x){if(!p(Math.sign(o.x)*c,"y"))return;mesh.rotation.y+=Math.sign(o.x)*c}if(l&&0!=o.y){if(!p(Math.sign(o.y)*c,"x"))return;mesh.rotation.x+=Math.sign(o.y)*c}}},!1),t.addEventListener("touchend",function(t){y.X=null,y.Y=null,0<x.length?x.pop():x=[];t.preventDefault(),a===r.MOUSEDOWN||r.MOUSEMOVE;m()},!1);var a,n={x:{enabled:!1,from:Math.PI/8,to:Math.PI/8},y:{enabled:!1,from:Math.PI/4,to:Math.PI/4}},s=15,h=6,o=.5,u=.05,c=.05,l=!1,f=!0,r={MOUSEDOWN:0,MOUSEMOVE:1},M=!1,d={x:0,y:0},x=[],y={X:null,Y:null};function E(){i.position.z-=o}function g(){i.position.z+=o}function p(t,e){return!n[e].enabled||-1*n[e].from<mesh.rotation[e]+t&&mesh.rotation[e]+t<n[e].to}function m(){d={x:0,y:0}}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,