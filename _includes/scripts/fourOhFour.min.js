var camera,scene,renderer,mesh,controls,windowHalfX=window.innerWidth/2,windowHalfY=window.innerHeight/2,setup=function(){(camera=new THREE.PerspectiveCamera(35,window.innerWidth/window.innerHeight,.1,3e3)).position.z=250,scene=new THREE.Scene;var e=new THREE.AmbientLight(16777215,.5);scene.add(e);var n=new THREE.Color("#ffffff"),i=new THREE.PointLight(n,.75);scene.add(i),(new THREE.FontLoader).load("../../assets/fonts/raleway_404.json",function(e){var n=new THREE.TextGeometry("404",{font:e,size:75,height:20,curveSegments:12,bevelEnabled:!0,bevelThickness:9,bevelSize:2,bevelSegments:5});n.center();var i=new THREE.MeshPhongMaterial({color:0,shininess:500});(mesh=new THREE.Mesh(n,i)).position.z=-400,mesh.position.y=-30,mesh.rotation.x=3,mesh.rotation.y=3,mesh.rotation.z=3,scene.add(mesh)}),(renderer=new THREE.WebGLRenderer({canvas:document.getElementById("canvas"),antialias:!0})).setClearColor(16777215),renderer.setSize(window.innerWidth,window.innerHeight),(controls=new THREE.ObjectControls(camera,renderer.domElement,mesh)).enableVerticalRotation(),controls.setRotationSpeed(.05),window.addEventListener("resize",onWindowResize,!1),animate()};function onWindowResize(){windowHalfX=window.innerWidth/2,windowHalfY=window.innerHeight/2,camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}function animate(){mesh&&(mesh.rotation.x+=.001,mesh.rotation.y+=.003,mesh.rotation.z+=.005),requestAnimationFrame(animate),render()}function render(){renderer.render(scene,camera)}setup();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvdXJPaEZvdXIuanMiXSwibmFtZXMiOlsiY2FtZXJhIiwic2NlbmUiLCJyZW5kZXJlciIsIm1lc2giLCJjb250cm9scyIsIndpbmRvd0hhbGZYIiwid2luZG93IiwiaW5uZXJXaWR0aCIsIndpbmRvd0hhbGZZIiwiaW5uZXJIZWlnaHQiLCJzZXR1cCIsIlRIUkVFIiwiUGVyc3BlY3RpdmVDYW1lcmEiLCJwb3NpdGlvbiIsInoiLCJTY2VuZSIsImFtbGlnaHQiLCJBbWJpZW50TGlnaHQiLCJhZGQiLCJjb2xvck9iaiIsIkNvbG9yIiwicHRsaWdodCIsIlBvaW50TGlnaHQiLCJGb250TG9hZGVyIiwibG9hZCIsImZvbnQiLCJnZW9tZXRyeSIsIlRleHRHZW9tZXRyeSIsInNpemUiLCJoZWlnaHQiLCJjdXJ2ZVNlZ21lbnRzIiwiYmV2ZWxFbmFibGVkIiwiYmV2ZWxUaGlja25lc3MiLCJiZXZlbFNpemUiLCJiZXZlbFNlZ21lbnRzIiwiY2VudGVyIiwibWF0ZXJpYWwiLCJNZXNoUGhvbmdNYXRlcmlhbCIsImNvbG9yIiwic2hpbmluZXNzIiwiTWVzaCIsInkiLCJyb3RhdGlvbiIsIngiLCJXZWJHTFJlbmRlcmVyIiwiY2FudmFzIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImFudGlhbGlhcyIsInNldENsZWFyQ29sb3IiLCJzZXRTaXplIiwiT2JqZWN0Q29udHJvbHMiLCJkb21FbGVtZW50IiwiZW5hYmxlVmVydGljYWxSb3RhdGlvbiIsInNldFJvdGF0aW9uU3BlZWQiLCJhZGRFdmVudExpc3RlbmVyIiwib25XaW5kb3dSZXNpemUiLCJhbmltYXRlIiwiYXNwZWN0IiwidXBkYXRlUHJvamVjdGlvbk1hdHJpeCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsInJlbmRlciJdLCJtYXBwaW5ncyI6IkFBRUEsSUFBSUEsT0FBUUMsTUFBT0MsU0FFZkMsS0FFQUMsU0FFQUMsWUFBY0MsT0FBT0MsV0FBYSxFQUNsQ0MsWUFBY0YsT0FBT0csWUFBYyxFQUVuQ0MsTUFBUSxZQUNYVixPQUFTLElBQUlXLE1BQU1DLGtCQUFrQixHQUFJTixPQUFPQyxXQUFXRCxPQUFPRyxZQUFhLEdBQUssTUFDN0VJLFNBQVNDLEVBQUksSUFFcEJiLE1BQVEsSUFBSVUsTUFBTUksTUFLbEIsSUFBSUMsRUFBVSxJQUFJTCxNQUFNTSxhQUFhLFNBQVUsSUFFL0NoQixNQUFNaUIsSUFBSUYsR0FHVixJQUVJRyxFQUFXLElBQUlSLE1BQU1TLE1BRkosV0FHakJDLEVBQVUsSUFBSVYsTUFBTVcsV0FBV0gsRUFBVSxLQUM3Q2xCLE1BQU1pQixJQUFJRyxJQUlHLElBQUlWLE1BQU1ZLFlBRWhCQyxLQUFLLHNDQUF1QyxTQUFVQyxHQUM1RCxJQUFJQyxFQUFXLElBQUlmLE1BQU1nQixhQUFhLE1BQU8sQ0FBRUYsS0FBTUEsRUFBTUcsS0FBTSxHQUFJQyxPQUFRLEdBQUlDLGNBQWUsR0FBSUMsY0FBYyxFQUFNQyxlQUFnQixFQUFHQyxVQUFXLEVBQUdDLGNBQWUsSUFDeEtSLEVBQVNTLFNBRVQsSUFBSUMsRUFBVyxJQUFJekIsTUFBTTBCLGtCQUFrQixDQUFFQyxNQUFPLEVBQU9DLFVBQVcsT0FFdEVwQyxLQUFPLElBQUlRLE1BQU02QixLQUFLZCxFQUFVVSxJQUMzQnZCLFNBQVNDLEdBQUssSUFDbkJYLEtBQUtVLFNBQVM0QixHQUFLLEdBQ25CdEMsS0FBS3VDLFNBQVNDLEVBQUksRUFDbEJ4QyxLQUFLdUMsU0FBU0QsRUFBSSxFQUNsQnRDLEtBQUt1QyxTQUFTNUIsRUFBSSxFQUVsQmIsTUFBTWlCLElBQUlmLFNBS1hELFNBQVcsSUFBSVMsTUFBTWlDLGNBQWMsQ0FBQ0MsT0FBUUMsU0FBU0MsZUFBZSxVQUFXQyxXQUFXLEtBQ2pGQyxjQUFjLFVBQ3ZCL0MsU0FBU2dELFFBQVE1QyxPQUFPQyxXQUFXRCxPQUFPRyxjQUkxQ0wsU0FBVyxJQUFJTyxNQUFNd0MsZUFBZW5ELE9BQVFFLFNBQVNrRCxXQUFZakQsT0FDeERrRCx5QkFDVGpELFNBQVNrRCxpQkFBaUIsS0FFMUJoRCxPQUFPaUQsaUJBQWlCLFNBQVVDLGdCQUFnQixHQUVsREMsV0FHRCxTQUFTRCxpQkFDUm5ELFlBQWNDLE9BQU9DLFdBQWEsRUFDbENDLFlBQWNGLE9BQU9HLFlBQWMsRUFFbkNULE9BQU8wRCxPQUFTcEQsT0FBT0MsV0FBYUQsT0FBT0csWUFDM0NULE9BQU8yRCx5QkFFUHpELFNBQVNnRCxRQUFRNUMsT0FBT0MsV0FBWUQsT0FBT0csYUFHNUMsU0FBU2dELFVBQ0p0RCxPQUNIQSxLQUFLdUMsU0FBU0MsR0FBSyxLQUNuQnhDLEtBQUt1QyxTQUFTRCxHQUFLLEtBQ25CdEMsS0FBS3VDLFNBQVM1QixHQUFLLE1BR3BCOEMsc0JBQXNCSCxTQUN0QkksU0FHRCxTQUFTQSxTQUNSM0QsU0FBUzJELE9BQU81RCxNQUFPRCxRQUd4QlUiLCJmaWxlIjoiZm91ck9oRm91ci5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbnZhciBjYW1lcmEsIHNjZW5lLCByZW5kZXJlcjtcclxuXHJcbnZhciBtZXNoO1xyXG5cclxudmFyIGNvbnRyb2xzO1xyXG5cclxudmFyIHdpbmRvd0hhbGZYID0gd2luZG93LmlubmVyV2lkdGggLyAyO1xyXG52YXIgd2luZG93SGFsZlkgPSB3aW5kb3cuaW5uZXJIZWlnaHQgLyAyO1xyXG5cclxudmFyIHNldHVwID0gZnVuY3Rpb24oKSB7XHJcblx0Y2FtZXJhID0gbmV3IFRIUkVFLlBlcnNwZWN0aXZlQ2FtZXJhKDM1LCB3aW5kb3cuaW5uZXJXaWR0aC93aW5kb3cuaW5uZXJIZWlnaHQsIDAuMSwgMzAwMCk7XHJcblx0Y2FtZXJhLnBvc2l0aW9uLnogPSAyNTA7XHJcblxyXG5cdHNjZW5lID0gbmV3IFRIUkVFLlNjZW5lKCk7XHJcblxyXG5cdC8vIExJR0hUSU5HIFxyXG5cclxuXHQvLyBBbWJpZW50IExpZ2h0XHJcblx0dmFyIGFtbGlnaHQgPSBuZXcgVEhSRUUuQW1iaWVudExpZ2h0KDB4ZmZmZmZmLCAwLjUpO1xyXG5cdC8vIFNwZWNpZmllcyBpbnRlbnNpdHkgb2YgYW1iaWVudCBsaWdodFxyXG5cdHNjZW5lLmFkZChhbWxpZ2h0KTtcclxuXHJcblx0Ly8gUG9pbnQgTGlnaHRcclxuXHR2YXIgcGFyYW1zID0ge2NvbG9yOiBcIiNmZmZmZmZcIiB9O1xyXG5cclxuXHR2YXIgY29sb3JPYmogPSBuZXcgVEhSRUUuQ29sb3IocGFyYW1zLmNvbG9yKTtcclxuXHR2YXIgcHRsaWdodCA9IG5ldyBUSFJFRS5Qb2ludExpZ2h0KGNvbG9yT2JqLCAwLjc1KTtcclxuXHRzY2VuZS5hZGQocHRsaWdodCk7XHJcblxyXG5cclxuXHQvLyBNRVNIIEFORCBGT05UIExPQURFUlxyXG5cdHZhciBsb2FkZXIgPSBuZXcgVEhSRUUuRm9udExvYWRlcigpO1xyXG5cclxuXHRsb2FkZXIubG9hZCgnLi4vLi4vYXNzZXRzL2ZvbnRzL3JhbGV3YXlfNDA0Lmpzb24nLCBmdW5jdGlvbiAoZm9udCkge1xyXG5cdFx0dmFyIGdlb21ldHJ5ID0gbmV3IFRIUkVFLlRleHRHZW9tZXRyeSgnNDA0JywgeyBmb250OiBmb250LCBzaXplOiA3NSwgaGVpZ2h0OiAyMCwgY3VydmVTZWdtZW50czogMTIsIGJldmVsRW5hYmxlZDogdHJ1ZSwgYmV2ZWxUaGlja25lc3M6IDksIGJldmVsU2l6ZTogMiwgYmV2ZWxTZWdtZW50czogNSB9KTtcclxuXHRcdGdlb21ldHJ5LmNlbnRlcigpO1xyXG5cclxuXHRcdHZhciBtYXRlcmlhbCA9IG5ldyBUSFJFRS5NZXNoUGhvbmdNYXRlcmlhbCh7IGNvbG9yOiAweDAwMCwgc2hpbmluZXNzOiA1MDAgfSk7XHJcblx0XHJcblx0XHRtZXNoID0gbmV3IFRIUkVFLk1lc2goZ2VvbWV0cnksIG1hdGVyaWFsKTtcclxuXHRcdG1lc2gucG9zaXRpb24ueiA9IC00MDA7ICAgIFxyXG5cdFx0bWVzaC5wb3NpdGlvbi55ID0gLTMwO1xyXG5cdFx0bWVzaC5yb3RhdGlvbi54ID0gMztcclxuXHRcdG1lc2gucm90YXRpb24ueSA9IDM7XHJcblx0XHRtZXNoLnJvdGF0aW9uLnogPSAzO1xyXG5cclxuXHRcdHNjZW5lLmFkZChtZXNoKTtcclxuXHR9KTtcclxuXHJcblx0Ly8gUkVOREVSRVJcclxuXHJcblx0cmVuZGVyZXIgPSBuZXcgVEhSRUUuV2ViR0xSZW5kZXJlcih7Y2FudmFzOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2FudmFzJyksIGFudGlhbGlhczogdHJ1ZX0pO1xyXG5cdHJlbmRlcmVyLnNldENsZWFyQ29sb3IoMHhmZmZmZmYpO1xyXG5cdHJlbmRlcmVyLnNldFNpemUod2luZG93LmlubmVyV2lkdGgsd2luZG93LmlubmVySGVpZ2h0KTtcclxuXHJcblx0Ly8gQ09OVFJPTFNcclxuXHJcblx0Y29udHJvbHMgPSBuZXcgVEhSRUUuT2JqZWN0Q29udHJvbHMoY2FtZXJhLCByZW5kZXJlci5kb21FbGVtZW50LCBtZXNoKTtcclxuXHRjb250cm9scy5lbmFibGVWZXJ0aWNhbFJvdGF0aW9uKCk7XHJcblx0Y29udHJvbHMuc2V0Um90YXRpb25TcGVlZCgwLjA1KTtcclxuXHJcblx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIG9uV2luZG93UmVzaXplLCBmYWxzZSk7XHJcblxyXG5cdGFuaW1hdGUoKTtcclxufTtcclxuXHJcbmZ1bmN0aW9uIG9uV2luZG93UmVzaXplKCkge1xyXG5cdHdpbmRvd0hhbGZYID0gd2luZG93LmlubmVyV2lkdGggLyAyO1xyXG5cdHdpbmRvd0hhbGZZID0gd2luZG93LmlubmVySGVpZ2h0IC8gMjtcclxuXHJcblx0Y2FtZXJhLmFzcGVjdCA9IHdpbmRvdy5pbm5lcldpZHRoIC8gd2luZG93LmlubmVySGVpZ2h0O1xyXG5cdGNhbWVyYS51cGRhdGVQcm9qZWN0aW9uTWF0cml4KCk7XHJcblxyXG5cdHJlbmRlcmVyLnNldFNpemUod2luZG93LmlubmVyV2lkdGgsIHdpbmRvdy5pbm5lckhlaWdodCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFuaW1hdGUoKSB7XHJcblx0aWYgKG1lc2gpIHtcclxuXHRcdG1lc2gucm90YXRpb24ueCArPSAwLjAwMTtcclxuXHRcdG1lc2gucm90YXRpb24ueSArPSAwLjAwMztcclxuXHRcdG1lc2gucm90YXRpb24ueiArPSAwLjAwNTsgIFxyXG5cdH1cclxuXHJcblx0cmVxdWVzdEFuaW1hdGlvbkZyYW1lKGFuaW1hdGUpO1xyXG5cdHJlbmRlcigpO1xyXG59XHJcblxyXG5mdW5jdGlvbiByZW5kZXIoKSB7XHJcblx0cmVuZGVyZXIucmVuZGVyKHNjZW5lLCBjYW1lcmEpO1xyXG59XHJcblxyXG5zZXR1cCgpOyJdfQ==